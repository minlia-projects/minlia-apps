
package localhost.starwebservice;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * StarWebService
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "StarWebService", targetNamespace = "http://localhost/StarWebService/", wsdlLocation = "http://120.234.18.4:8099/STWS_JL/?wsdl")
public class StarWebService
    extends Service
{

    private final static URL STARWEBSERVICE_WSDL_LOCATION;
    private final static WebServiceException STARWEBSERVICE_EXCEPTION;
    private final static QName STARWEBSERVICE_QNAME = new QName("http://localhost/StarWebService/", "StarWebService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://120.234.18.4:8099/STWS_JL/?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        STARWEBSERVICE_WSDL_LOCATION = url;
        STARWEBSERVICE_EXCEPTION = e;
    }

    public StarWebService() {
        super(__getWsdlLocation(), STARWEBSERVICE_QNAME);
    }

    public StarWebService(WebServiceFeature... features) {
        super(__getWsdlLocation(), STARWEBSERVICE_QNAME, features);
    }

    public StarWebService(URL wsdlLocation) {
        super(wsdlLocation, STARWEBSERVICE_QNAME);
    }

    public StarWebService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, STARWEBSERVICE_QNAME, features);
    }

    public StarWebService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public StarWebService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns StarWebServiceSoap
     */
    @WebEndpoint(name = "StarWebServiceSoap")
    public StarWebServiceSoap getStarWebServiceSoap() {
        return super.getPort(new QName("http://localhost/StarWebService/", "StarWebServiceSoap"), StarWebServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns StarWebServiceSoap
     */
    @WebEndpoint(name = "StarWebServiceSoap")
    public StarWebServiceSoap getStarWebServiceSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://localhost/StarWebService/", "StarWebServiceSoap"), StarWebServiceSoap.class, features);
    }

    private static URL __getWsdlLocation() {
        if (STARWEBSERVICE_EXCEPTION!= null) {
            throw STARWEBSERVICE_EXCEPTION;
        }
        return STARWEBSERVICE_WSDL_LOCATION;
    }

}
