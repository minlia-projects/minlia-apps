
package localhost.starwebservice;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "StarWebServiceSoap", targetNamespace = "http://localhost/StarWebService/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface StarWebServiceSoap {


    /**
     * 测试Web Service的连接状态
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Test", action = "http://localhost/StarWebService/Test")
    @WebResult(name = "TestResult", targetNamespace = "http://localhost/StarWebService/")
    @RequestWrapper(localName = "Test", targetNamespace = "http://localhost/StarWebService/", className = "localhost.starwebservice.Test")
    @ResponseWrapper(localName = "TestResponse", targetNamespace = "http://localhost/StarWebService/", className = "localhost.starwebservice.TestResponse")
    public String test();

    /**
     * 检查电表编号的合法性，即在思达系统中是否存在
     * 
     * @param customerAddress
     * @param password
     * @param checkMeterNoResult
     * @param meterNo
     * @param operatorCode
     * @param customerName
     */
    @WebMethod(operationName = "CheckMeterNo", action = "http://localhost/StarWebService/CheckMeterNo")
    @RequestWrapper(localName = "CheckMeterNo", targetNamespace = "http://localhost/StarWebService/", className = "localhost.starwebservice.CheckMeterNo")
    @ResponseWrapper(localName = "CheckMeterNoResponse", targetNamespace = "http://localhost/StarWebService/", className = "localhost.starwebservice.CheckMeterNoResponse")
    public void checkMeterNo(
        @WebParam(name = "OperatorCode", targetNamespace = "http://localhost/StarWebService/")
        String operatorCode,
        @WebParam(name = "Password", targetNamespace = "http://localhost/StarWebService/")
        String password,
        @WebParam(name = "MeterNo", targetNamespace = "http://localhost/StarWebService/")
        String meterNo,
        @WebParam(name = "CheckMeterNoResult", targetNamespace = "http://localhost/StarWebService/", mode = WebParam.Mode.OUT)
        Holder<Integer> checkMeterNoResult,
        @WebParam(name = "CustomerName", targetNamespace = "http://localhost/StarWebService/", mode = WebParam.Mode.OUT)
        Holder<String> customerName,
        @WebParam(name = "CustomerAddress", targetNamespace = "http://localhost/StarWebService/", mode = WebParam.Mode.OUT)
        Holder<String> customerAddress);

    /**
     * 购电
     * 
     * @param password
     * @param amount
     * @param orderNo
     * @param purchasePowerResult
     * @param stOrderNo
     * @param meterNo
     * @param operatorCode
     * @param token
     */
    @WebMethod(operationName = "PurchasePower", action = "http://localhost/StarWebService/PurchasePower")
    @RequestWrapper(localName = "PurchasePower", targetNamespace = "http://localhost/StarWebService/", className = "localhost.starwebservice.PurchasePower")
    @ResponseWrapper(localName = "PurchasePowerResponse", targetNamespace = "http://localhost/StarWebService/", className = "localhost.starwebservice.PurchasePowerResponse")
    public void purchasePower(
        @WebParam(name = "OperatorCode", targetNamespace = "http://localhost/StarWebService/")
        String operatorCode,
        @WebParam(name = "Password", targetNamespace = "http://localhost/StarWebService/")
        String password,
        @WebParam(name = "MeterNo", targetNamespace = "http://localhost/StarWebService/")
        String meterNo,
        @WebParam(name = "Amount", targetNamespace = "http://localhost/StarWebService/")
        String amount,
        @WebParam(name = "OrderNo", targetNamespace = "http://localhost/StarWebService/")
        String orderNo,
        @WebParam(name = "PurchasePowerResult", targetNamespace = "http://localhost/StarWebService/", mode = WebParam.Mode.OUT)
        Holder<Integer> purchasePowerResult,
        @WebParam(name = "Token", targetNamespace = "http://localhost/StarWebService/", mode = WebParam.Mode.OUT)
        Holder<String> token,
        @WebParam(name = "STOrderNo", targetNamespace = "http://localhost/StarWebService/", mode = WebParam.Mode.OUT)
        Holder<String> stOrderNo);

    /**
     * 查询电表的剩余金额
     * 
     * @param getMeterBalanceResult
     * @param password
     * @param meterNo
     * @param meterBalance
     * @param operatorCode
     */
    @WebMethod(operationName = "GetMeterBalance", action = "http://localhost/StarWebService/GetMeterBalance")
    @RequestWrapper(localName = "GetMeterBalance", targetNamespace = "http://localhost/StarWebService/", className = "localhost.starwebservice.GetMeterBalance")
    @ResponseWrapper(localName = "GetMeterBalanceResponse", targetNamespace = "http://localhost/StarWebService/", className = "localhost.starwebservice.GetMeterBalanceResponse")
    public void getMeterBalance(
        @WebParam(name = "OperatorCode", targetNamespace = "http://localhost/StarWebService/")
        String operatorCode,
        @WebParam(name = "Password", targetNamespace = "http://localhost/StarWebService/")
        String password,
        @WebParam(name = "MeterNo", targetNamespace = "http://localhost/StarWebService/")
        String meterNo,
        @WebParam(name = "GetMeterBalanceResult", targetNamespace = "http://localhost/StarWebService/", mode = WebParam.Mode.OUT)
        Holder<Integer> getMeterBalanceResult,
        @WebParam(name = "MeterBalance", targetNamespace = "http://localhost/StarWebService/", mode = WebParam.Mode.OUT)
        Holder<String> meterBalance);

    /**
     * 查询电表的剩余金额是否不足
     * 
     * @param password
     * @param getMeterInsufficientResult
     * @param meterNo
     * @param insufficient
     * @param operatorCode
     */
    @WebMethod(operationName = "GetMeterInsufficient", action = "http://localhost/StarWebService/GetMeterInsufficient")
    @RequestWrapper(localName = "GetMeterInsufficient", targetNamespace = "http://localhost/StarWebService/", className = "localhost.starwebservice.GetMeterInsufficient")
    @ResponseWrapper(localName = "GetMeterInsufficientResponse", targetNamespace = "http://localhost/StarWebService/", className = "localhost.starwebservice.GetMeterInsufficientResponse")
    public void getMeterInsufficient(
        @WebParam(name = "OperatorCode", targetNamespace = "http://localhost/StarWebService/")
        String operatorCode,
        @WebParam(name = "Password", targetNamespace = "http://localhost/StarWebService/")
        String password,
        @WebParam(name = "MeterNo", targetNamespace = "http://localhost/StarWebService/")
        String meterNo,
        @WebParam(name = "GetMeterInsufficientResult", targetNamespace = "http://localhost/StarWebService/", mode = WebParam.Mode.OUT)
        Holder<Integer> getMeterInsufficientResult,
        @WebParam(name = "Insufficient", targetNamespace = "http://localhost/StarWebService/", mode = WebParam.Mode.OUT)
        Holder<String> insufficient);

    /**
     * 下发电表拉合闸命令
     * 
     * @param password
     * @param meterNo
     * @param switchStatus
     * @param operatorCode
     * @param actionNo
     * @return
     *     returns int
     */
    @WebMethod(operationName = "SetMeterSwitchStatus", action = "http://localhost/StarWebService/SetMeterSwitchStatus")
    @WebResult(name = "SetMeterSwitchStatusResult", targetNamespace = "http://localhost/StarWebService/")
    @RequestWrapper(localName = "SetMeterSwitchStatus", targetNamespace = "http://localhost/StarWebService/", className = "localhost.starwebservice.SetMeterSwitchStatus")
    @ResponseWrapper(localName = "SetMeterSwitchStatusResponse", targetNamespace = "http://localhost/StarWebService/", className = "localhost.starwebservice.SetMeterSwitchStatusResponse")
    public int setMeterSwitchStatus(
        @WebParam(name = "OperatorCode", targetNamespace = "http://localhost/StarWebService/")
        String operatorCode,
        @WebParam(name = "Password", targetNamespace = "http://localhost/StarWebService/")
        String password,
        @WebParam(name = "MeterNo", targetNamespace = "http://localhost/StarWebService/")
        String meterNo,
        @WebParam(name = "SwitchStatus", targetNamespace = "http://localhost/StarWebService/")
        String switchStatus,
        @WebParam(name = "ActionNo", targetNamespace = "http://localhost/StarWebService/")
        String actionNo);

    /**
     * 获取电表拉合闸命令结果
     * 
     * @param password
     * @param getActionResultResult
     * @param operatorCode
     * @param actionNo
     * @param actionResult
     */
    @WebMethod(operationName = "GetActionResult", action = "http://localhost/StarWebService/GetActionResult")
    @RequestWrapper(localName = "GetActionResult", targetNamespace = "http://localhost/StarWebService/", className = "localhost.starwebservice.GetActionResult")
    @ResponseWrapper(localName = "GetActionResultResponse", targetNamespace = "http://localhost/StarWebService/", className = "localhost.starwebservice.GetActionResultResponse")
    public void getActionResult(
        @WebParam(name = "OperatorCode", targetNamespace = "http://localhost/StarWebService/")
        String operatorCode,
        @WebParam(name = "Password", targetNamespace = "http://localhost/StarWebService/")
        String password,
        @WebParam(name = "ActionNo", targetNamespace = "http://localhost/StarWebService/")
        String actionNo,
        @WebParam(name = "GetActionResultResult", targetNamespace = "http://localhost/StarWebService/", mode = WebParam.Mode.OUT)
        Holder<Integer> getActionResultResult,
        @WebParam(name = "ActionResult", targetNamespace = "http://localhost/StarWebService/", mode = WebParam.Mode.OUT)
        Holder<String> actionResult);

}
